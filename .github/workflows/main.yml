name: CI-CD

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET Core SDKs
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-north-1
          role-to-assume: ${{ secrets.DEPLOY_ROLE }}
          role-session-name: OIDCSession

      - name: Restore
        run: dotnet restore --runtime linux-x64
      - name: Lint
        run: dotnet format --verify-no-changes --no-restore
      - name: Test
        run: dotnet test --no-restore /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov /p:Exclude="[TestBase*]*"
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Publish
        run: dotnet publish --no-build --configuration Release
      - name: Zip Packages
        run: |
          mkdir .output

          projects=(
            App.Events/ScheduleEventNotifications)
          for project in "${projects[@]}"
          do
            cd src/$project/bin/Release/net6.0/publish

            step_back="../../../../../../"
            if [[ $project == */* ]]; then
              step_back="$step_back../"
            fi
            zip -q -D $step_back.output/${project#App.Events/}.zip *
            cd $step_back
          done

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Setup CDK
        run: npm install -g aws-cdk
      - name: CDK Bootstrap
        run: cdk bootstrap
      - name: CDK Deploy
        run: cdk deploy --require-approval never --all
